zephyr setup:
https://docs.zephyrproject.org/2.7.0/getting_started/index.html
sudo apt-get update && sudo apt-get upgrade --assume-yes && sudo apt-get dist-upgrade --assume-yes && sudo apt autoremove --assume-yes
## sudo apt install python3-pip
sudo apt install --no-install-recommends git cmake ninja-build gperf \
  ccache dfu-util device-tree-compiler wget \
  python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
  make gcc gcc-multilib g++-multilib libsdl2-dev
1) Install west, and make sure ~/.local/bin is on your PATH environment variable:
pip install --user -U west
echo 'export PATH=~/.local/bin:"$PATH"' >> ~/.bashrc
source ~/.bashrc
2) Get Zephyr source code
# west init ~/zephyrproject
west init --mr v2.7.0 ~/zephyrproject
cd ~/zephyrproject
west update
3) Export a Zephyr CMake package. This allows CMake to automatically load boilerplate code required for building Zephyr applications.
west zephyr-export
4) Zephyrâ€™s scripts/requirements.txt file declares additional Python dependencies. Install them with pip3.
pip3 install --user -r ~/zephyrproject/zephyr/scripts/requirements.txt

Install a Toolchain
> A toolchain provides a compiler, assembler, linker, and other programs required to build Zephyr applications.
1) Download and install the latest SDK installer:
wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.13.1/zephyr-sdk-0.13.1-linux-x86_64-setup.run
chmod +x zephyr-sdk-0.13.1-linux-x86_64-setup.run
2)  Install udev rules, which allow you to flash most Zephyr boards as a regular user:
sudo cp ~/zephyr-sdk-0.13.1/sysroots/x86_64-pokysdk-linux/usr/share/openocd/contrib/60-openocd.rules /etc/udev/rules.d
sudo udevadm control --reload

Run firmware - Posix: 
west build -b native_posix
./build/zephyr/zephyr.exe

*** Fix network ***
zephyrproject/tools/net-tools/net-setup.sh -i zeth.1 & 
(as root)

Run tests:
https://docs.zephyrproject.org/2.7.0/guides/test/ztest.html
../../zephyr/scripts/twister -T tests/ --enable-valgrind -i -v